# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
  #    - name: Download a docker agent
   #     run: |
    #        sudo apt-get update 
     #       # Add Docker's official GPG key:
      #        sudo apt-get update
       #       sudo apt-get install ca-certificates curl
        #      sudo install -m 0755 -d /etc/apt/keyrings
         #     sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          #    sudo chmod a+r /etc/apt/keyrings/docker.asc
            # Add the repository to Apt sources:
           # echo \
           # "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            #$(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            #sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            #sudo apt-get update
            #systemctl --user start docker-desktop -y
            #sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      - name: Run docker file
        run: docker compose up -d
              
            

      # Runs a set of commands using the runners shell
#      - name: Run a multi-line script
 #       run: |
  #        echo Add other actions to build,
   #       echo test, and deploy your project.
